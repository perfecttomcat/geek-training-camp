当运行java程序(以JDK1.8为例)且不指定相应GC算法和堆内存大小时，默认情况下：GC采用并行GC算法，堆内存取当前宿主机物理内存的1/4作为最大堆内存，若宿主机物理内存不足1G时，将取其1/2作为最大堆内存。

通常情况下堆内存大小越小，发生YoungGC和Full GC的次数会明显增多，当堆内存过小甚至会出现OOM异常，因此堆内存大小设置应适当大些以保证程序的正常运行。

串行GC由于是单线程回收垃圾，每次执行的时间差不多，整体执行效率较低。

并行GC采用多线程回收垃圾，由于堆内存自适应参数默认开启，每次执行的时间不可控，整体来说比串行GC效率高。当将堆内存变大后，GC次数会明显减少，堆内存呈现蓄水池作用，但每次GC时执行时间也同样变长。

CMS GC和G1 GC由于改进了GC算法，并发处理相关区域的GC，整体操作执行时间较短。